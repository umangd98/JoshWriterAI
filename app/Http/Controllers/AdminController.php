<?phpnamespace App\Http\Controllers;use App\Http\Controllers\Controller;use App\Models\User;use Illuminate\Http\Request;use Illuminate\Support\Facades\Artisan;use Illuminate\Support\Facades\Auth;use Illuminate\Support\Facades\Hash;use Illuminate\Support\Facades\Session;class AdminController extends Controller{    public function dashboard()    {        // return dd("dssadad");                if (Auth::user()->role == 'Admin') {            $users = User::take(10)->orderBy('id', 'DESC')->where('id', '!=', auth()->id())->get();            $tokens = User::sum('used_tokens');            return view('admin.dashboard.index', compact('users', 'tokens'));        } else {            $users = User::orderBy('id', 'desc')->where('id', '!=', auth()->id())->where('email', '!=', "admin@admin.com")->where('role', '!=', "Manager")->get();            $tokens = User::sum('used_tokens');            return view('admin.dashboard.index', compact('users', 'tokens'));        }    }    public function login()    {        return view('admin.auth.login');    }    public function allUsers()    {        $users = User::where('role', 'User')->orderby('id', 'DESC')->get();        return view('admin.users.table', compact('users'));    }    public function clearcache()    {        Artisan::call('cache:clear');        return redirect()->route('admin.dashboard')->with('success', 'Cache Cleared Successfully!');    }    public function updateprofile(Request $request)    {        $user = User::find(Auth::user()->id);        // Check if both 'password' and 'old_password' fields have values        if (@$request->password == true && @$request->old_password == true) {            $check = Hash::check($request->input('old_password'), $user->password);            if ($check) {                $user->password = Hash::make($request->input('password'));            } else {                return redirect()->back()->with('error', 'Old Password is Invalid');            }        }        if ($request->has('name')) {            $user->name = $request->input('name');        }        $user->save();        return redirect()->back()->with('success', 'Profile Updated Successfully');    }    public function authenticate(Request $request)    {        $request->validate(            [                'email' => 'required',                'password' => 'required|min:8|max:254',            ],            [                'email.required' => 'Email is required...',                'password.required' => 'Password is required...',                'password.min' => 'Password must be atleast 8 characters...',                'password.max' => 'Password must be less then 254 characters...',            ]        );        $found = User::where('email', $request->email)->count();        if ($found == 0) {            return redirect()->back()->with('error', 'Email or password is invalid!');        }        $data = User::where('email', $request->email)->first();        if ($data->role == 'Admin' || $data->role == 'Manager') {            $credentials = $request->only('email', 'password');            if (Auth::attempt($credentials)) {                return redirect()->route('admin.dashboard');            } else {                return redirect()->back()->with('error', 'Email or password is invalid!');            }        } else {            return redirect()->back()->with('error', 'Role is invalid!');        }    }    public function logout()    {        Auth::logout();        Session::flush();        return redirect()->route('login');    }}